#include <stdio.h> 
#include <stdio.h> 
#include <sys/socket.h> 
#include <stdlib.h> 
#include <netinet/in.h> 
#include <string.h> 

int main (int argc, char** argv) {
  int server_fd, newSocket, valRead;
  struct sockaddr_in address;
  int opt = 1;
  int addrLen = sizeof(address);
  char buffer[1024] = {0};    
  if((server_fd = socket(AF_INET, SOCK_STREAM, 0)) == 0) {
    perror("socket failed");
    exit(EXIT_FAILURE);
  }

  if (setsockopt(server_fd, SOL_SOCKET, SO_REUSEADDR | SO_REUSEPORT, &opt, sizeof(opt))) {
    perror("setsockopt");
    exit(EXIT_FAILURE);
  }

  address.sin_family = AF_INET;
  address.sin_addr.s_addr = INADDR_ANY;
  address.sin_port = htons(atoi(argv[1]));

  if(bind(server_fd, (struct sockaddr*) &address, sizeof(address)) < 0) {
    perror("bind failed");
    exit(EXIT_FAILURE);
  }

  if(listen(server_fd, 10) < 0) {
    perror("listen");
    exit(EXIT_FAILURE);
  }

  if((newSocket = accept(server_fd, (struct sockaddr*) &address, (socklen_t *) &addrLen)) < 0) {
    perror("accept");
    exit(EXIT_FAILURE);
  }
  valRead = read(newSocket, buffer, 1024);
  printf("%s", buffer);
  return 0;
}
